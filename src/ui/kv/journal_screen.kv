# kv/journal_screen.kv
# Kivy Language (.kv) 檔案，用於定義 JournalScreen 的 UI 佈局和外觀

# 導入必要的 KivyMD 組件
#:import MDBottomNavigation kivymd.uix.bottomnavigation.MDBottomNavigation
#:import MDBottomNavigationItem kivymd.uix.bottomnavigation.MDBottomNavigationItem
#:import MDTopAppBar kivymd.uix.toolbar.MDTopAppBar
#:import MDBoxLayout kivymd.uix.boxlayout.MDBoxLayout
#:import MDCard kivymd.uix.card.MDCard
#:import MDLabel kivymd.uix.label.MDLabel
#:import MDFloatingActionButton kivymd.uix.button.MDFloatingActionButton
#:import MDIconButton kivymd.uix.button.MDIconButton
#:import ScrollView kivy.uix.scrollview.ScrollView
#:import MDList kivymd.uix.list.MDList
#:import IconRightWidget kivymd.uix.list.IconRightWidget
#:import dp kivy.metrics.dp

<JournalScreen>:
    name: 'journal_screen'  # 賦予此畫面一個名稱，用於 ScreenManager 進行切換

    MDBoxLayout:
        orientation: 'vertical' # 垂直方向佈局
        md_bg_color: app.theme_cls.bg_normal # 設置背景顏色為應用程式主題的標準背景色

        # 頂部應用程式欄 (App Bar) - 與首頁保持一致，但標題為「帳本」
        MDTopAppBar:
            title: "帳本" # <-- 標題文字更改為「帳本」
            pos_hint: {'top': 1} # 放在頂部
            elevation: 2 # 陰影效果
            # 左側動作按鈕 (返回箭頭)
            left_action_items: [["arrow-left", lambda x: setattr(app.root, 'current', 'home')]] # <--- 已修改為正確的返回語法
            # 右側動作按鈕 (放大鏡和齒輪圖標)
            right_action_items: [["magnify", lambda x: root.search_button_pressed()], ["cog", lambda x: root.settings_button_pressed()]]
            radius: [0, 0, 0, 0] # 沒有圓角

        # 內容滾動視圖 (Scrollable Content Area) - 包含帳本條目
        ScrollView:
            MDBoxLayout:
                orientation: 'vertical'
                spacing: "15dp" # 垂直方向元素間距
                padding: "15dp" # 內部邊距
                adaptive_height: True # 高度自動適應內容 (配合 ScrollView)
                size_hint_y: None # 必須設置為 None 才能讓 adaptive_height 工作
                height: self.minimum_height # 必須設置為 minimum_height 才能讓 adaptive_height 工作

                # MDList 用於顯示 Journal 的動態數據 (每個條目由 Python 創建的 MDCard)
                MDList:
                    id: journal_list # <-- JournalScreen.py 會將內容添加到此 ID
                    padding: 0 # MDList 內部填充為0，讓卡片填滿
                    spacing: "15dp" # MDList 項目間距，這裡用於卡片間距
                    adaptive_height: True
                    size_hint_y: None
                    height: self.minimum_height

                # 底部填充空間，防止內容與底部導航欄重疊
                # 這個高度要足夠讓 FAB 和底部導航欄有空間
                MDBoxLayout:
                    size_hint_y: None
                    height: "80dp" # 底部導航欄的高度 + FAB 的垂直偏移量

        # 底部導航欄 (MDBottomNavigation 會自動將項目均勻分佈)
        MDBottomNavigation:
            panel_color: "#ffffffff"
            # 移除 id: bottom_nav_bar 和 panel_color: app.theme_cls.bg_normal
            # 直接在每個 MDBottomNavigationItem 中處理 on_tab_press 事件
            size_hint:(1,.2)

            # 導航項目：Home
            MDBottomNavigationItem:
                name: 'home_nav' # 唯一的名稱
                text: 'Home'
                icon: 'home'
                on_tab_press: app.root.current = 'home' # <-- 已新增

            # 導航項目：Journal
            MDBottomNavigationItem:
                name: 'journal_nav'
                text: 'Journal'
                icon: 'book-open-variant'
                on_tab_press: app.root.current = 'journal_screen' # <-- 已新增

            # 導航項目：Report
            MDBottomNavigationItem:
                name: 'report_nav'
                text: 'Report'
                icon: 'chart-bar'
                on_tab_press: print("跳轉到 Report 頁面 (未實作)") # <-- 已新增

            # 導航項目：Settings
            MDBottomNavigationItem:
                name: 'settings_nav'
                text: 'Settings'
                icon: 'cog'
                on_tab_press: print("跳轉到 Settings 頁面 (未實作)") # <-- 已新增

    # 懸浮動作按鈕 (Floating Action Button - FAB) - 相機圖標
    MDFloatingActionButton:
        icon: "camera"
        md_bg_color: 0, 0, 0, 1
        pos_hint: {'center_x': 0.5, 'center_y': 0.1}
        size_hint: None, None
        size: "48dp", "48dp"
        elevation: 6
        on_release: root.go_to_camera_screen() # <--- 已修改為呼叫 go_to_camera_screen 方法